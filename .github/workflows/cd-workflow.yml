name: CD workflow

on:
  workflow_run:
    workflows: ["CI workflow"]
    types:
      - completed

jobs:
  cleanup:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pull changes
        run: git pull --no-rebase --no-tags

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Make script executable
        run: |
          chmod +x ./destroy.sh

      - name: Cleanup previos deployments
        env:
          TF_VAR_scrape_url: ${{ secrets.SCRAPE_URL }}
        run: |
          ./destroy.sh ${{ secrets.AWS_REGION }}

  deploy:
    needs: cleanup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Make scripts executable
        run: |
          chmod +x ./deploy.sh
          chmod +x ./run.sh

      - name: Deploy to AWS
        env:
          SCRAPE_URL: ${{ secrets.SCRAPE_URL }}
        run: |
          ./deploy.sh ${{ secrets.AWS_REGION }} ${{ secrets.AWS_ACCOUNT_ID }}
        
      - name: Run Lambda function
        run: |
          ./run.sh
